import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as t,c as d,d as l,e,b as s,w as u,a as o,f as i}from"./app-7ccddef0.js";const h={},c=i(`<h1 id="面试须知" tabindex="-1"><a class="header-anchor" href="#面试须知" aria-hidden="true">#</a> 面试须知</h1><h2 id="_1-面试前准备" tabindex="-1"><a class="header-anchor" href="#_1-面试前准备" aria-hidden="true">#</a> 1 面试前准备</h2><h3 id="_1-1-招呼语" tabindex="-1"><a class="header-anchor" href="#_1-1-招呼语" aria-hidden="true">#</a> 1.1 招呼语</h3><p>2023 年大环境不好，如果想要通过简历筛选阶段，好的招呼语就显得相关重要，HR 不懂什么开源不开源，只会关键字匹配，所以招呼语可以参考如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>您好，我有两年的前端开发经验，目前在职，两周内可到岗。

我熟悉vue、react、angular、node、nest并有相关项目经验。

我现在公司是做医院定制项目的，对于微应用、自动化部署、组件库封装有一定的实践与研究

我可以发简历给您看看吗？
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-简历的准备" tabindex="-1"><a class="header-anchor" href="#_1-2-简历的准备" aria-hidden="true">#</a> 1.2 简历的准备</h3><p>首先，简历是进入面试的敲门砖，也是留给意向公司的第一印象，同时一份好的简历，就能快速获得 HR 的印象，HR 从一天几百份甚至上千份简历中筛选出几份出来想必是几秒一份，所以简历的第一印象最重要，简历印象如下：</p>`,7),p=i("<li><p><strong>简历命名</strong></p><ul><li>实习、校招：应聘+职位名称+学校+学历，如：应聘前端工程师+xx 大学+本科</li><li>社会招聘：应聘+职位名称+学历+工作年限，如：应聘前端工程师+本科+两年经验</li></ul></li><li><p><strong>简历内容</strong></p><ul><li>基本信息</li><li>专业技能</li><li>工作经历</li><li>项目经历</li><li>教育背景（可并入基本信息）</li></ul></li>",2),_=l("strong",null,"简历模板",-1),f=i('<h3 id="_1-3-面试注意事项" tabindex="-1"><a class="header-anchor" href="#_1-3-面试注意事项" aria-hidden="true">#</a> 1.3 面试注意事项</h3><ul><li><p>简要了解一下面试公司的相关产品与业务</p></li><li><p>熟悉面试流程<br> 一般技术面试都至少三轮：</p><ul><li>基础面试：主要考察对岗位和简历中涉及到的基础知识部分的提问，包括一部分和场景设计的面试题。</li><li>项目面试：主要考察简历中涉及的项目，会涉及你项目的相关业务知识、扮演角色、技术取舍、技术攻坚等。</li><li>HR 面试：考察候选人是否价值观符合公司要求、工作稳定性如何、沟通协作能力如何等。</li></ul></li><li><p>技术考察：一个好的技术考察，必须得有自我介绍好的铺垫和引导。</p><ul><li>多重提问：当一个技术问题抛出的时候，你可能面对更深层次的追问。（因此在准备面试自演自面时，多进行自我的追问）</li><li>答题法则：很多面试都是以 STAR 法则进行问题的应答<div class="hint-container tip"><p class="hint-container-title">提示</p><p>STAR 法则：是情境(situation)、任务（task）、行动(action)、结果(result)四项的缩写。</p><ul><li>情境：事情是在什么情况下发生。</li><li>任务：你需要做的任务。</li><li>行动：针对这样的情况分析，采用了什么行动方式。</li><li>结果：结果怎样，在这样的情况下你学习到了什么。</li></ul></div></li><li>刻意引导：本来回答不上来的问题，转化为了成功展示自己能力的加分项，如除了 Vue 用过 Angular 吗？不要直接说没有，可以说【我虽然没用过，但是在学习双向绑定原理的时候了解了一下，Angular 脏检查等...】</li><li>面试礼仪：</li></ul></li></ul><h3 id="_1-4-自我介绍" tabindex="-1"><a class="header-anchor" href="#_1-4-自我介绍" aria-hidden="true">#</a> 1.4 自我介绍</h3><p>自我介绍时面试过程中必备的一个环节，几乎所有面试都是从自我介绍这个环节开始的，自我介绍归根到底是一个热身运动，切忌使用大量的篇幅，自我介绍可以归结为以下三点：</p><ul><li>【<strong>你是谁？</strong>】：至少体现自己的姓名、岗位和工作年限，应届生必须介绍自己的教育背景，学历亮点最好提及。（个人信息灵活拓展，不宜太长）</li><li>【<strong>你会什么？</strong>】：简要介绍自己的技术栈，<strong>切忌把自己只是简单使用过，写过 demo 看过文档的所谓技术说出来</strong>。</li><li>【<strong>你擅长什么？</strong>】：重点介绍自己擅长的技术，如性能优化、高并发等，实事求是。</li></ul><h3 id="_1-5-提问技术官的问题" tabindex="-1"><a class="header-anchor" href="#_1-5-提问技术官的问题" aria-hidden="true">#</a> 1.5 提问技术官的问题</h3><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>切忌问结果：绝大部分公司规定不会透露结果的。</li><li>切忌问工资：除了 HR 跟你谈薪资的时候，千万别跟技术面试官谈工资，工资是所有公司的高压线。</li><li>切忌问技术问题：别拿自己不会的技术难题反问面试官。</li></ul></div><p>可以根据以下情况问：</p><ul><li>团队情况、团队业务、职位具体工作</li><li>公司培训机会和晋升机会</li></ul><h3 id="_1-6-hr-面试" tabindex="-1"><a class="header-anchor" href="#_1-6-hr-面试" aria-hidden="true">#</a> 1.6 HR 面试</h3><p>HR 通常是程序员面试的最后一面，讲道理刷人的几率不大，但依然有人倒在这最后一关。HR 面往往是把控人才质量的最后一关，与前面的技术面不同，HR 面往往侧重员工风险的评估与基本的员工素质：</p><ul><li><p>录用风险评估：评估候选人是否具备稳定性，是否会带来额外的管理风险。</p></li><li><p>员工素质评估：评估候选人是否具备职场的基本素质、沟通能力、团队精神和合作意识等。<br> HR 常见问题：</p></li><li><p>对未来 3-5 年的职业规划：考察候选人对未来的规划能力，主要想通过候选人额规划嗅出候选人对工作的态度、稳定性和对技术的追求。</p><ul><li>首先表示有规划，如何谈一谈自己的现状。</li><li>从工作本身出发，谈谈自己会如何出色完成本职工作，如何对团队贡献、如何帮助带领团队其他成员创造更多价值、如何帮助团队扩大影响力</li><li>从学习触发，谈谈自己会如何精进领域知识、如何通过提升自己专业能力，如何反哺团队。</li></ul></li><li><p>如何看待加班（996）：考察候选人的抗压能力和责任心。</p><ul><li>紧急加班：表示这是每个公司都会遇到的情况，自己愿意牺牲时间帮助公司和团队</li><li>长期加班：如果是个人长期加班对于我个人会磨练自己的技能，提高自己的效率，如果是团队长期加班，自己会帮助团队找到问题，利用自动化工具或者更高效的协作流程来提高整个团队的效率，帮助大家摆脱加班。</li></ul></li><li><p>如何面对时间有限的工作：考察候选人时间管理和处理大量任务的能力</p><ul><li>将认为分解为紧急且重要、重要且不紧急、紧急但不重要、不重要且不紧急，依次完成上述任务</li><li>与自己的领导沟通将不重要的任务放缓执行或者砍掉，或者组内的新人处理</li></ul></li><li><p>为什么从上一家公司离职：考察离职原因，候选人离职风险评估</p><ul><li>工资低、技术含量低等等原因离职</li></ul></li><li><p>还有其他公司的 Offer：评估候选人是否有短时间内入职其他公司的可能性</p><ul><li>表示自己有三四个已经确认过的 offer 的了</li><li>薪资差距不大，会优先考虑本公司</li><li>有一两个 offer 催的比较急，希望这边快点出结果</li></ul></li><li><p>如何与 HR 谈薪资？</p><ul><li>HR：您期望的薪资是多少？本人：就我的面试表现，贵公司最高可以给多少薪水？HR：这个暂且无法确定，要结合您几轮面试结果和用人部门的意见来综合评定。</li><li>技术面试效果很好，可以报一个高一点的薪资</li><li>技术面试效果一般，但比较想进这家公司，报一个折中的薪资</li><li>技术面试效果不好，但想进，可以开一个稍微低一点的工资</li></ul></li><li><p>沟通技巧</p><ul><li>不要急于出价</li><li>要有底气足够自信</li><li>谈好 offer 就要尽快落实（一定要 HR 发邮件 offer 的形式来确认）</li></ul></li></ul><h2 id="_2-标准工作流程-大厂为例" tabindex="-1"><a class="header-anchor" href="#_2-标准工作流程-大厂为例" aria-hidden="true">#</a> 2 标准工作流程（大厂为例）</h2><ul><li>交互/UI 评审</li><li>技术方案评审</li><li>接口设计评审</li><li>代码</li><li>前后端联调</li><li>冒烟用例</li><li>测试</li><li>预发验收</li><li>发布上线/验证</li><li>观察用户数据</li><li>复盘</li></ul><h2 id="_3-开发必备软素质" tabindex="-1"><a class="header-anchor" href="#_3-开发必备软素质" aria-hidden="true">#</a> 3 开发必备软素质</h2><ul><li>批判性思维和执行力 <ul><li>抓本质</li><li>抓落地</li></ul></li><li>团队合作 <ul><li>在一个团队里，我们到底应该关注生产力还是关注生产关系？</li></ul></li><li>沟通能力 <ul><li>对方在说什么？</li><li>先别说话，先听 <blockquote><p>在听对方说的过程中，你应该想以下几点：问题定义、认真听、信息对称、想对策。</p></blockquote></li><li>劝架，及时制止争执</li></ul></li><li>创新力 <ul><li>不设边界</li><li>往大了想 往细了做</li><li>创新等于更多机会</li></ul></li></ul>',16);function v(m,b){const a=r("RouterLink");return t(),d("div",null,[c,l("ul",null,[p,l("li",null,[l("p",null,[_,e("："),s(a,{to:"/docs/resume.html"},{default:u(()=>[e("个人简历")]),_:1})])])]),f,o(` ## 2 技能知识点

## 3 项目经历 `)])}const R=n(h,[["render",v],["__file","notice.html.vue"]]);export{R as default};
